FROM alpine
MAINTAINER SuperFlyXXI <superflyxxi@yahoo.com>

ENTRYPOINT ["ffmpeg"]
CMD ["--help"]

#ARG PKG_CONFIG_PATH=/usr/lib/pkgconfig
#ARG SRC_DIR=/ffmpeg
#ARG NASM_VERSION=2.14.02

#ENV PATH=${PATH}:${SRC_DIR}/bin

WORKDIR /data
#RUN mkdir -p ${SRC_DIR}/build ${SRC_DIR}/bin

# Enable repos
#RUN yum install -y --enablerepo=extras epel-release yum-utils && yum clean all

# Upgrade OS
#RUN yum upgrade -y && yum clean all

# Install libdrm
#RUN yum install -y libdrm libdrm-devel && yum clean all

# Install compile dependencies
#RUN yum install -y \
    # Common Dependencies
#    automake autoconf bzip2 bzip2-devel cmake freetype-devel gcc gcc-c++ git libtool make mercurial zlib-devel \
    # libva dependencies
#    which \
    # libbluray dependencies
#    libxml2-devel fontconfig fontconfig-devel ant \
#    && yum clean all

ARG PREFIX=/usr
ARG TMP_DIR=/tmp/build
RUN mkdir -p ${TMP_DIR}

# Build xorgs-macros
RUN APK_ARGS="gcc git musl-dev ninja meson pkgconf autoconf make automake" && \
	apk add --no-cache ${APK_ARGS} && \
	DIR=$(mktemp -d) && cd ${DIR} && \
	git clone --depth 1 https://github.com/freedesktop/xorg-macros.git && \
	cd xorg-macros && \
	./autogen.sh && \
	./configure --prefix=${PREFIX} && \
	make && \
	make install && \
	rm -rf ${DIR} && \
	apk del ${APK_ARGS}

# Build PCI-Access
RUN APK_ARGS="musl-dev git make autoconf automake libtool gcc" && \
	apk add --no-cache ${APK_ARGS} && \
	DIR=$(mktemp -d) && cd ${DIR} && \
	git clone --depth 1 https://gitlab.freedesktop.org/xorg/lib/libpciaccess && \
	cd libpciaccess && \
	./autogen.sh && \
	./configure --prefix=${PREFIX} && \
	make && \
	make install && \
	rm -rf ${DIR} && \
	apk del ${APK_ARGS}

# Build libdrm
RUN apk add --no-cache libdrm-dev
#RUN APK_ARGS="musl-dev git ninja meson gcc pkgconfig bash linux-headers" && \
#	apk add --no-cache ${APK_ARGS} && \
#	DIR=$(mktemp -d) && cd ${DIR} && \
#	git clone --depth 1 https://gitlab.freedesktop.org/mesa/drm && \
#	cd drm && \
#	meson --prefix=${PREFIX} builddir/ && \
#	ninja -C builddir/ install && \
#	rm -rf ${DIR} && \
#	apk del ${APK_ARGS}

# Build libva
RUN APK_ARGS="git musl-dev gcc autoconf automake libtool make" && \
	apk add --no-cache ${APK_ARGS} && \
	DIR=$(mktemp -d) && cd ${DIR} && \
	git clone --depth 1 https://github.com/intel/libva.git && \
	cd libva && \
	./autogen.sh && \
	./configure CFLAGS=' -O2' CXXFLAGS=' -O2' --prefix=${PREFIX} && \
	make && make install && \
	rm -rf ${DIR} && \
	apk del ${APK_ARGS}

# Build libva-intel-driver
RUN APK_ARGS="git musl-dev autoconf automake libtool make gcc" && \
	apk add --no-cache ${APK_ARGS} && \
	DIR=$(mktemp -d) && cd ${DIR} && \
	git clone --depth 1 https://github.com/intel/intel-vaapi-driver.git && \
	cd intel-vaapi-driver && \
	./autogen.sh && \
	./configure --prefix=${PREFIX} && \
 	make && make install && \
	rm -rf ${DIR} && \
	apk del ${APK_ARGS}

# Build x264
RUN APK_ARGS="musl-dev git make bash gcc nasm" && \
	apk add --no-cache ${APK_ARGS} && \
	DIR=$(mktemp -d) && cd ${DIR} && \
	git clone --depth 1 https://code.videolan.org/videolan/x264.git && \
	cd x264 && \
	PKG_CONFIG_PATH="${SRC_DIR}/build/lib/pkgconfig" ./configure --prefix="${SRC_DIR}/build" --bindir="${SRC_DIR}/bin" --enable-static --disable-cli && \
	make && make install && \
	rm -rf ${DIR} && \
	apk del ${APK_ARGS}

# Build x265
RUN APK_ARGS="musl-dev mercurial cmake nasm make g++" && \
	apk add --no-cache ${APK_ARGS} && \
	DIR=$(mktemp -d) && cd ${DIR} && \
	hg clone https://bitbucket.org/multicoreware/x265 && \
	cd x265/build/linux && \
	cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="${SRC_DIR}/build" -DENABLE_SHARED:bool=off ../../source && \
	make && make install && \
	rm -rf ${DIR} && \
	apk del ${APK_ARGS}

# Build fdk_aac
RUN APK_ARGS="musl-dev git autoconf make g++ libtool automake" && \
	apk add --no-cache ${APK_ARGS} && \
	DIR=$(mktemp -d) && cd ${DIR} && \
	git clone --depth 1 https://github.com/mstorsjo/fdk-aac && \
	cd fdk-aac && \
	autoreconf -fiv && \
	./configure --prefix="${SRC_DIR}/build" --disable-shared && \
	make && make install && \
	rm -rf ${DIR} && \
	apk del ${APK_ARGS}

# Build libvpx
RUN DIR=$(mktemp -d) && cd ${DIR} && \
    git clone --depth 1 https://chromium.googlesource.com/webm/libvpx.git && \
    cd libvpx && \
    ./configure --prefix="${SRC_DIR}/build" --disable-examples --disable-unit-tests --enable-vp9-highbitdepth --as=yasm && \
    make && make install && \
    rm -rf ${DIR}

# Build libbluray
RUN DIR=$(mktemp -d) && cd ${DIR} && \
    git clone --depth 1 https://code.videolan.org/videolan/libbluray.git && \
    cd libbluray && \
    git submodule update --init && \
    ./bootstrap && \
    ./configure --prefix=/usr --libdir=/usr/lib64 && \
    make && make install && \
    rm -rf ${DIR}

# Build ffmpeg
RUN DIR=$(mktemp -d) && cd ${DIR} && \
    git clone --depth 1 https://git.ffmpeg.org/ffmpeg.git && \
    cd ffmpeg && \
    PKG_CONFIG_PATH="${SRC_DIR}/build/lib/pkgconfig" ./configure \
        --prefix="${SRC_DIR}/build" \
        --pkg-config-flags="--static" \
        --extra-cflags="-I${SRC_DIR}/build/include" \
        --extra-ldflags="-L${SRC_DIR}/build/lib" \
        --extra-libs=-lpthread \
        --extra-libs=-lm \
        --bindir="${SRC_DIR}/bin" \
        --enable-small \
        --enable-gpl \
        --enable-libx265 \
        --enable-libx264 \
        --enable-vaapi \
        --enable-libbluray \
        --enable-libfdk_aac --enable-nonfree \
        --enable-libvpx \
        --disable-doc \
        --disable-debug && \
    make && make install && \
    make distclean && \
    hash -r && \
    rm -rf ${DIR} 


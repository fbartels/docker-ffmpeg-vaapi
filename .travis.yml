language: minimal

services:
  - docker

env:
  matrix:
    - OS=centos
    - OS=alpine
  global:
    - IMAGE_NAME=ffmpeg-vaapi
    - FINAL_IMAGE=${DOCKER_REGISTRY}/${DOCKER_REGISTRY_REPO}/${IMAGE_NAME}

before_install:
  - sudo mkdir -p "/etc/docker/certs.d/${DOCKER_REGISTRY}"
  - openssl s_client -showcerts -connect ${DOCKER_REGISTRY} < /dev/null 2> /dev/null | openssl x509 -outform PEM | sudo tee "/etc/docker/certs.d/${DOCKER_REGISTRY}/ca.crt"
  - echo ${DOCKER_REGISTRY_PASSWORD} | docker login --username ${DOCKER_REGISTRY_USERNAME} --password-stdin ${DOCKER_REGISTRY}

install:
  - if [[ ! ${TRAVIS_BRANCH} =~ (master|v.*) ]]; then
      echo "Caching from ${DOCKER_REGISTRY}/${DOCKER_REGISTRY_REPO}/${IMAGE_NAME}:${OS}";
      export CACHE_FROM_ARGS="--cache-from ${DOCKER_REGISTRY}/${DOCKER_REGISTRY_REPO}/${IMAGE_NAME}:${OS}";
      docker pull ${DOCKER_REGISTRY}/${DOCKER_REGISTRY_REPO}/${IMAGE_NAME}:${OS} || true;
    fi

script:
  - set -e
  - docker build -f Dockerfile.${OS} --compress ${CACHE_FROM_ARGS} --tag ${IMAGE_NAME}:build .
  - docker run --rm -t ${IMAGE_NAME}:build -buildconf
  - bash runtests.sh

after_success:
  - if [[ "master" == "${TRAVIS_BRANCH}" ]]; then 
      export PUSH_IMAGE="${FINAL_IMAGE}:${OS}";
    else
      export PUSH_IMAGE="${FINAL_IMAGE}:${OS}-${TRAVIS_BRANCH}";
    fi
  - echo "Pushing to ${PUSH_IMAGE}"
  - docker tag ${IMAGE_NAME}:build ${PUSH_IMAGE}
  - docker push ${PUSH_IMAGE}
  - if [[ "master" == "${TRAVIS_BRANCH}" && "${OS}" == "alpine" ]]; then
      docker tag ${IMAGE_NAME}:build ${FINAL_IMAGE}:latest;
      echo "Pushing to ${FINAL_IMAGE}:latest";
      docker push ${FINAL_IMAGE}:latest;
    fi

